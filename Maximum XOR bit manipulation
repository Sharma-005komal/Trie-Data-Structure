/*********************Maximum XOR of two numbers in an array**************************/

#include <bits/stdc++.h>
using namespace std;

struct Node
{
    Node* link[2];
    
    bool containkey(int ind)
    {
        return (link[ind] != NULL);
    }
    
    Node* get(int ind)
    {
        return link[ind];
    }
    
    void put(int ind, Node* node)
    {
        link[ind] = node;
    }
};

class Trie
{
    private:
       Node* root;
       
    public:
        Trie()
        {
            root = new Node();
        }
        
        void insert(int num)
        {
            Node* node = root;
            for(int i=31; i>=0; i--)
            {
                int bit = (num>>i) & 1;
                if(!node->containkey(bit))
                {
                    node->put(bit, new Node());
                }
                node = node->get(bit);
            }
        }
        
        int findMax(int num)
        {
            Node* node = root;
            int maxNum = 0;
            for(int i=31; i>=0; i--)
            {
                int bit = (num>>i) & 1;
                if(node->containkey(!bit))
                {
                    maxNum = maxNum | (1<<i);
                    node = node->get(!bit);
                }
                else
                {
                    node = node->get(bit);
                }
            }
            return maxNum;
        }
};

int maxXOR(int n, int m, vector<int>& a1, vector<int>& a2)
{
    Trie trie;
    for(int i=0; i<n; i++)
    {
        trie.insert(a1[i]);
    }
    int maxi = 0;
    for(int i=0; i<m; i++)
    {
        maxi = max(maxi, trie.findMax(a2[i]));
    }
    return maxi;
}

int main()
{
    vector<int> a1 = {6,8};
    vector<int> a2 = {7,8,2};
    int n=2, m=3;
    
    cout<<maxXOR(n, m, a1, a2)<<endl;
    
    return 0;
}
